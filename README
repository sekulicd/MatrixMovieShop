About MatrixMovieShop
MatrixMovieShop is a scalable solution which is designed as per CQRS / Event Sourcing architectural pattern.
The focus is on design and architecture which enables easy scalability and modularity. 
Out of focus: database implementation (data stored in memory), writing unit tests.
It comprises of four decoupled modules: 
1. MovieInventory - in charge for maintaining movie inventory
2. MovieOrderingEngine -  in charge for renting and returning of movies
3. PricingEngine - in charge for calculating and paying rent and return price
4. BonusClub - in charge for maintaining customer bonuses

Exposed API's:
1. MovieInventory:
	1.1 addMovie - adds movie to Inventory
	1.2 getMovie - returns list of all movies in Inventory
2. MovieOrderingEngine:
	2.1 rentMovie - places rent movie request (supports only renting of one 			 movie)
	2.2 returnMovie - places return movie request
	2.3 getOrder - return order details
3. PricingEngine 
	3.1 getRentPrice - returns rent price for specific order
	3.2 payRentPrice - pay rent price for specific order
	3.3 getReturnPrice - returns return price for specific order
	3.4 payReturnPrice - pay rent price for specific order
4. BonusClub:
	4.1 getCustomerBonus - returns customer bonus
	
Technology stack:
	1. Java SE 8/Java EE7
	2. Apache Kafka
	3. Docker
	4. Maven
	
Build & run:
1. Build modules:
	1.1 mvn clean install (from MatrixMovieShop location)
2. Build & run kafka/zookeeper image 
    2.1 cd kafka (from MatrixMovieShop location)
    2.2  docker-compose up -d
3. Build & run modules images
    3.1 cd MovieInventory  (from MatrixMovieShop location)
    3.2 ./build-run-local.sh
    3.3 cd MovieOrderingEngine (from MatrixMovieShop location)
    3.4  ./build-run-local.sh
    3.5  cd PricingEngine (from MatrixMovieShop location)
    3.6 ./build-run-local.sh
    3.7 cd BonusClub (from MatrixMovieShop location)
    3.8 ./build-run-local.sh
Optional: if necessery any for any module additional instance can be started, for example if ordering server MovieOrderingEngine has to big load new instance can be started
	3.9 cd MovieOrderingEngine (from MatrixMovieShop location)
	4.0 ./build-run-local-additional-node.sh
	
Debugging:
Checking Kafka events:
1. Navigate to bin folder of kafka instalation
./kafka-console-consumer.sh --bootstrap-server 192.168.99.100:9092  --topic movie_inventory --from-beginning
./kafka-console-consumer.sh --bootstrap-server 192.168.99.100:9092  --topic movie_orders --from-beginning
./kafka-console-consumer.sh --bootstrap-server 192.168.99.100:9092  --topic pricing_engine --from-beginning
./kafka-console-consumer.sh --bootstrap-server 192.168.99.100:9092  --topic bonus_topic --from-beginning

Testing application:
- Add movie to inventory
curl -X POST -d '{"title":"LOTR3","movie_type":"OLD"}' http://192.168.99.100:8002/MovieInventory/casumo/inventory/add --header "Content-Type:application/json"
- Check if movie is added
curl http://192.168.99.100:8002/MovieInventory/casumo/inventory/movies
- Rent movie
curl -X POST -d '{"title":"LOTR3","rent_period":"2","customer_name":"dusan"}' http://192.168.99.100:8003/MovieOrderingEngine/casumo/ordering/rent/ --header "Content-Type:application/json"
- GetPrice
curl -X GET http://192.168.99.100:8004/PricingEngine/casumo/pricing/rentPrice/19033a5c-4b4e-46b1-8904-8f01a5ba4f0c
- Pay Rent price
curl -X POST -d '{"orderId":"19033a5c-4b4e-46b1-8904-8f01a5ba4f0c","rent_price":"30"}' http://192.168.99.100:8004/PricingEngine/casumo/pricing/payRentPrice/ --header "Content-Type:application/json"
- Return movie
curl -X POST -d '{"order_id":"19033a5c-4b4e-46b1-8904-8f01a5ba4f0c","return_date":"2018-01-20"}' http://192.168.99.100:8003/MovieOrderingEngine/casumo/ordering/return/ --header "Content-Type:application/json"
- Get return price
curl -X GET http://192.168.99.100:8004/PricingEngine/casumo/pricing/returnPrice/19033a5c-4b4e-46b1-8904-8f01a5ba4f0c
- Pay return price
curl -X POST -d '{"orderId":"19033a5c-4b4e-46b1-8904-8f01a5ba4f0c","return_price":"540"}' http://192.168.99.100:8004/PricingEngine/casumo/pricing/payReturnPrice/ --header "Content-Type:application/json"
- Get Order Status
curl -X GET http://192.168.99.100:8003/MovieOrderingEngine/casumo/ordering/19033a5c-4b4e-46b1-8904-8f01a5ba4f0c
- Get Customer Bonus
curl -X GET http://192.168.99.100:8001/BonusClub/casumo/bonusclub/customer/martina
